---
import BaseLayout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';

import directus from '../../../lib/directus';
import { readItems } from '@directus/sdk';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await directus.request(
    readItems('posts', {
      fields: ['*'],
    })
  );

  const uniqueTags = [...new Set(posts.flatMap((post) => post.tags || []))];

  // Create a path for each tag
  return uniqueTags.map((tag) => {
    // Make tag matching case-insensitive
    const filteredPosts = posts.filter(
      (post) => post.tags?.some((t) => t.toLowerCase() === (tag as string).toLowerCase()) // Explicitly cast tag to string
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params as { tag: string };
const { posts = [] } = Astro.props;

console.log(`Tag: ${tag}, Number of posts: ${posts.length}`);

const sortedPosts =
  posts && posts.length > 0
    ? [...posts].sort((a, b) => b.published_date.valueOf() - a.published_date.valueOf())
    : [];
console.log(`Sorted posts length: ${sortedPosts.length}`);

const relatedTags = [
  ...new Set(sortedPosts.flatMap((post) => post.tags || []).filter((t) => t !== tag)),
].slice(0, 5);
---

<BaseLayout title={`Posts tagged with "${tag}"`}>
  <div class="mx-auto max-w-5xl px-4 py-10 sm:py-16" transition:animate="slide" >
    <div class="relative mb-10 sm:mb-16">
      <div class="relative text-center sm:text-left">
        <a
          href="/blog#topics"
          class="group mb-4 inline-flex items-center gap-2 text-sm font-medium text-zinc-600 transition-colors hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-zinc-100"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="h-4 w-4 transition-transform duration-300 group-hover:-translate-x-1"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
            >
            </path>
          </svg>
          <span>Back to blog</span>
          <span
            class="block h-0.5 max-w-0 bg-zinc-300 transition-all duration-300 group-hover:max-w-full dark:bg-zinc-700"
          ></span>
        </a>

        <div
          class="mb-2 flex flex-col justify-center gap-4 sm:flex-row sm:items-center sm:justify-start"
        >
          <div
            class="tag-icon mx-auto flex h-12 w-12 items-center justify-center rounded-xl bg-zinc-100 shadow-xs sm:mx-0 dark:bg-zinc-800"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-6 w-6 text-zinc-700 dark:text-zinc-300"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"
              >
              </path>
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"> </path>
            </svg>
          </div>

          <h1
            class="text-3xl font-bold tracking-tight text-zinc-900 sm:text-4xl dark:text-zinc-100"
          >
            <span class="relative">
              #{tag}
              <span class="absolute -bottom-1 left-0 h-1 w-full bg-zinc-200 dark:bg-zinc-700"
              ></span>
              <span
                class="animate-expand absolute -bottom-1 left-0 h-1 w-full bg-zinc-900 opacity-70 dark:bg-zinc-100"
              ></span>
            </span>
          </h1>
        </div>

        <p
          class="mx-auto mt-4 max-w-2xl text-base text-zinc-600 sm:mx-0 sm:text-lg dark:text-zinc-400"
        >
          Exploring <span class="font-medium text-zinc-900 dark:text-zinc-100"
            >{sortedPosts.length}</span
          > articles tagged with <span class="font-medium text-zinc-900 dark:text-zinc-100"
            >"{tag}"</span
          >
        </p>
      </div>
    </div>

    <!-- Related tags section -->
    {
      relatedTags.length > 0 && (
        <div class="hero-text hide-scrollbar mb-8 overflow-x-auto pb-4 sm:mb-12">
          <h2 class="mb-3 text-center text-lg font-medium text-zinc-900 sm:text-left dark:text-zinc-100">
            Related topics
          </h2>
          <div class="flex flex-nowrap justify-center gap-2 sm:justify-start">
            {relatedTags.map((relatedTag) => (
              <a
                href={`/tags/${relatedTag}`}
                class="inline-flex shrink-0 items-center rounded-full bg-zinc-100 px-3 py-1.5 text-sm font-medium text-zinc-900 transition-colors hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-100 dark:hover:bg-zinc-700"
              >
                #{relatedTag}
              </a>
            ))}
          </div>
        </div>
      )
    }

    <!-- Posts list -->
    <div class="relative">
      <div
        class="hero-text bg-grid-pattern pointer-events-none absolute inset-0 opacity-5 dark:opacity-10"
      >
      </div>

      <div class="relative space-y-6 sm:space-y-8">
        {
          sortedPosts.map((post) => (
            <article class="hover-3d theme-transition-element group relative mx-auto flex max-w-2xl flex-col p-5 sm:mx-0 sm:p-8">
              <div class="absolute inset-0 rounded-2xl border border-zinc-200 bg-white/50 transition-all duration-300 group-hover:bg-zinc-50 hover:bg-zinc-50/80 hover:shadow-md dark:border-zinc-800 dark:bg-zinc-900/50 dark:group-hover:bg-zinc-800/70 dark:hover:bg-zinc-900/50" />

              <div class="flex flex-col gap-5 sm:flex-row sm:gap-6">
                {post.image && (
                  <div class="z-10 mx-auto h-40 w-full shrink-0 overflow-hidden rounded-xl sm:mx-0 sm:w-56">
                    <img
                      src={`${process.env.DIRECTUS_URL ?? 'https://directus.alexlebens.dev'}/assets/${post.image}?width=500`}
                      alt={post.image_alt}
                      class="h-full w-full object-cover"
                      loading="lazy"
                    />
                  </div>
                )}

                <div class="z-10 flex-1">
                  <h2 class="mb-2 text-center text-xl font-semibold text-zinc-900 sm:mb-3 sm:text-left sm:text-2xl dark:text-zinc-100">
                    <a href={`/blog/${post.slug}/`} class="before:absolute before:inset-0">
                      {post.title}
                    </a>
                  </h2>

                  <p class="mb-4 line-clamp-2 text-center text-sm text-zinc-600 sm:line-clamp-3 sm:text-left sm:text-base dark:text-zinc-400">
                    {post.description}
                  </p>

                  <div class="mb-2 flex flex-wrap items-center justify-center gap-3 text-xs text-zinc-500 sm:mb-3 sm:justify-start sm:gap-4 sm:text-sm dark:text-zinc-400">
                    <FormattedDate date={post.published_date} />
                  </div>
                </div>
              </div>

              <div class="z-10 mt-4 flex flex-wrap items-end justify-center border-t border-zinc-100 pt-4 sm:justify-between dark:border-zinc-800">
                {post.tags && post.tags.length > 0 && (
                  <div class="mb-3 flex flex-wrap justify-center gap-2 sm:mb-0 sm:justify-start">
                    {post.tags.slice(0, 3).map((postTag) => (
                      <a
                        href={`/blog/${postTag}`}
                        class={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium transition-colors ${
                          postTag === tag
                            ? 'bg-zinc-900/10 text-zinc-900 dark:bg-zinc-100/20 dark:text-zinc-100'
                            : 'bg-zinc-100 text-zinc-600 hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-400 dark:hover:bg-zinc-700'
                        }`}
                      >
                        #{postTag}
                      </a>
                    ))}
                    {post.tags.length > 3 && (
                      <span class="inline-flex items-center rounded-full bg-zinc-50 px-2 py-0.5 text-xs text-zinc-500 dark:bg-zinc-800/50 dark:text-zinc-400">
                        +{post.tags.length - 3}
                      </span>
                    )}
                  </div>
                )}

                <div class="mx-auto sm:mr-0 sm:ml-auto">
                  <a
                    href={`/blog/${post.slug}`}
                    class="theme-transition-color relative z-10 mx-auto mt-3 flex min-h-[44px] items-center text-sm font-medium text-zinc-700 transition-colors group-hover:text-zinc-900 sm:mx-0 sm:mt-4 dark:text-zinc-300 dark:group-hover:text-zinc-100"
                  >
                    <span class="relative inline-block overflow-hidden">
                      <span class="relative z-10">Read article</span>
                      <span class="absolute bottom-0 left-0 h-0.5 w-0 bg-zinc-800 transition-all duration-300 group-hover:w-full dark:bg-zinc-200" />
                    </span>
                    <svg
                      viewBox="0 0 16 16"
                      fill="none"
                      aria-hidden="true"
                      class="ml-1 h-4 w-4 stroke-current transition-transform duration-300"
                    >
                      <path
                        d="M6.75 5.75 9.25 8l-2.5 2.25"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))
        }
      </div>
    </div>

    <!-- Empty state -->
    {
      sortedPosts.length === 0 && (
        <div class="py-12 text-center sm:py-20">
          <div class="mb-4 inline-flex h-16 w-16 items-center justify-center rounded-full bg-zinc-100 sm:mb-6 sm:h-20 sm:w-20 dark:bg-zinc-800">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-8 w-8 text-zinc-500 sm:h-10 sm:w-10 dark:text-zinc-400"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"
              />
            </svg>
          </div>
          <h2 class="mb-2 text-xl font-semibold text-zinc-900 sm:text-2xl dark:text-zinc-100">
            No posts found
          </h2>
          <p class="text-zinc-600 dark:text-zinc-400">There are no posts with this tag yet.</p>
          <a
            href="/blog"
            class="mt-6 inline-flex items-center gap-2 rounded-md bg-zinc-100 px-4 py-2 text-sm font-medium text-zinc-800 transition-all duration-300 hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-200 dark:hover:bg-zinc-700"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75"
              />
            </svg>
            <span>Browse all articles</span>
          </a>
        </div>
      )
    }
  </div>
</BaseLayout>

<script>
  document.addEventListener('astro:page-load', () => {
    // Add smooth reveal animations for content after loading
    const animateContent = () => {
      // Animate hero section
      const heroElements = document.querySelectorAll(
        '.hero-text ~ div, .hero-text h1, .hero-text span, .hero-text p'
      );
      heroElements.forEach((el, index) => {
        setTimeout(
          () => {
            el.classList.add('animate-reveal');
          },
          100 + index * 150
        );
      });

      // Animate posts with staggered delay
      const articles = document.querySelectorAll('article.group');
      articles.forEach((article, index) => {
        setTimeout(
          () => {
            article.classList.add('animate-reveal');
          },
          500 + index * 150
        );
      });
    };

    animateContent();

    // Add hover effect for cards on touch devices
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

    if (isTouchDevice) {
      const cards = document.querySelectorAll('.hover-3d');

      cards.forEach((card) => {
        card.addEventListener('touchstart', () => {
          card.classList.add('is-touched');
        });

        card.addEventListener('touchend', () => {
          setTimeout(() => {
            card.classList.remove('is-touched');
          }, 300);
        });
      });

      // Disable hover animations on touch devices
      document.documentElement.classList.add('touch-device');
    }
  });
</script>

<style>
  /* Grid pattern background */
  .bg-grid-pattern {
    background-size: 30px 30px;
    background-image: radial-gradient(circle, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
  }

  :global(.dark) .bg-grid-pattern {
    background-image: radial-gradient(circle, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  }

  /* Hide scrollbar but keep functionality */
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }

  /* Animated underline */
  @keyframes expand {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  .animate-expand {
    animation: expand 1s ease-out forwards;
  }

  /* Content reveal animations */
  .hero-text h1,
  .hero-text span,
  .hero-text p,
  .hero-text ~ div,
  article.group {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.8s ease,
      transform 0.8s ease;
  }

  .animate-reveal {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }

  /* Line clamp for descriptions */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .animate-blob {
      animation-duration: 10s;
    }
  }
</style>
